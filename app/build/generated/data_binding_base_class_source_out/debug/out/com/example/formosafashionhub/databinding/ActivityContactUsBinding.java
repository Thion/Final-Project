// Generated by view binder compiler. Do not edit!
package com.example.formosafashionhub.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.formosafashionhub.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityContactUsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView mIconCall;

  @NonNull
  public final ImageView mIconEmail;

  @NonNull
  public final ImageView mIconMessage;

  @NonNull
  public final ImageView mIvContactUs;

  @NonNull
  public final TextView mTvActualEmailAddress;

  @NonNull
  public final TextView mTvActualMessageUs;

  @NonNull
  public final TextView mTvActualPhoneNo;

  @NonNull
  public final ConstraintLayout mTvContactUs;

  @NonNull
  public final TextView mTvEmailAddress;

  @NonNull
  public final TextView mTvMessageUs;

  @NonNull
  public final TextView mTvPhoneNo;

  private ActivityContactUsBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView mIconCall,
      @NonNull ImageView mIconEmail, @NonNull ImageView mIconMessage,
      @NonNull ImageView mIvContactUs, @NonNull TextView mTvActualEmailAddress,
      @NonNull TextView mTvActualMessageUs, @NonNull TextView mTvActualPhoneNo,
      @NonNull ConstraintLayout mTvContactUs, @NonNull TextView mTvEmailAddress,
      @NonNull TextView mTvMessageUs, @NonNull TextView mTvPhoneNo) {
    this.rootView = rootView;
    this.mIconCall = mIconCall;
    this.mIconEmail = mIconEmail;
    this.mIconMessage = mIconMessage;
    this.mIvContactUs = mIvContactUs;
    this.mTvActualEmailAddress = mTvActualEmailAddress;
    this.mTvActualMessageUs = mTvActualMessageUs;
    this.mTvActualPhoneNo = mTvActualPhoneNo;
    this.mTvContactUs = mTvContactUs;
    this.mTvEmailAddress = mTvEmailAddress;
    this.mTvMessageUs = mTvMessageUs;
    this.mTvPhoneNo = mTvPhoneNo;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityContactUsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityContactUsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_contact_us, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityContactUsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.mIconCall;
      ImageView mIconCall = ViewBindings.findChildViewById(rootView, id);
      if (mIconCall == null) {
        break missingId;
      }

      id = R.id.mIconEmail;
      ImageView mIconEmail = ViewBindings.findChildViewById(rootView, id);
      if (mIconEmail == null) {
        break missingId;
      }

      id = R.id.mIconMessage;
      ImageView mIconMessage = ViewBindings.findChildViewById(rootView, id);
      if (mIconMessage == null) {
        break missingId;
      }

      id = R.id.mIvContactUs;
      ImageView mIvContactUs = ViewBindings.findChildViewById(rootView, id);
      if (mIvContactUs == null) {
        break missingId;
      }

      id = R.id.mTvActualEmailAddress;
      TextView mTvActualEmailAddress = ViewBindings.findChildViewById(rootView, id);
      if (mTvActualEmailAddress == null) {
        break missingId;
      }

      id = R.id.mTvActualMessageUs;
      TextView mTvActualMessageUs = ViewBindings.findChildViewById(rootView, id);
      if (mTvActualMessageUs == null) {
        break missingId;
      }

      id = R.id.mTvActualPhoneNo;
      TextView mTvActualPhoneNo = ViewBindings.findChildViewById(rootView, id);
      if (mTvActualPhoneNo == null) {
        break missingId;
      }

      ConstraintLayout mTvContactUs = (ConstraintLayout) rootView;

      id = R.id.mTvEmailAddress;
      TextView mTvEmailAddress = ViewBindings.findChildViewById(rootView, id);
      if (mTvEmailAddress == null) {
        break missingId;
      }

      id = R.id.mTvMessageUs;
      TextView mTvMessageUs = ViewBindings.findChildViewById(rootView, id);
      if (mTvMessageUs == null) {
        break missingId;
      }

      id = R.id.mTvPhoneNo;
      TextView mTvPhoneNo = ViewBindings.findChildViewById(rootView, id);
      if (mTvPhoneNo == null) {
        break missingId;
      }

      return new ActivityContactUsBinding((ConstraintLayout) rootView, mIconCall, mIconEmail,
          mIconMessage, mIvContactUs, mTvActualEmailAddress, mTvActualMessageUs, mTvActualPhoneNo,
          mTvContactUs, mTvEmailAddress, mTvMessageUs, mTvPhoneNo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
